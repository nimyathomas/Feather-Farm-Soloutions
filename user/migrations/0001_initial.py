# Generated by Django 5.0.8 on 2025-01-18 09:59

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('stakeholder', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyTip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('category', models.CharField(choices=[('GENERAL', 'General'), ('COMPOSTING', 'Composting'), ('RECYCLING', 'Recycling'), ('WATER', 'Water Conservation')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VaccinationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose_number', models.PositiveIntegerField()),
                ('scheduled_date', models.DateField()),
                ('administered_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('doses_required', models.PositiveIntegerField()),
                ('interval_days', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WasteManagementResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('resource_type', models.CharField(choices=[('GUIDE', 'Guide'), ('VIDEO', 'Video'), ('ARTICLE', 'Article'), ('INFOGRAPHIC', 'Infographic')], max_length=50)),
                ('file', models.FileField(upload_to='waste_resources/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'mp4', 'jpg', 'png'])])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('farm_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('length', models.FloatField(blank=True, default=None, null=True)),
                ('breadth', models.FloatField(blank=True, default=None, null=True)),
                ('expiry_date', models.DateField(blank=True, default=None, null=True)),
                ('pollution_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('coopcapacity', models.IntegerField(blank=True, default=None, null=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(max_length=255)),
                ('plan_file', models.FileField(blank=True, null=True, upload_to='farm_plan/')),
                ('hotel_license', models.FileField(blank=True, null=True, upload_to='hotel_licenses/')),
                ('is_recommended', models.BooleanField(default=False)),
                ('distance_from_hotel', models.FloatField(blank=True, null=True)),
                ('certification_type', models.CharField(blank=True, choices=[('ORGANIC', 'Organic Certified'), ('STANDARD', 'Standard'), ('PREMIUM', 'Premium Quality')], max_length=20, null=True)),
                ('certification_file', models.FileField(blank=True, null=True, upload_to='certifications/')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='supplier',
            constraint=models.UniqueConstraint(fields=('supplier_code',), name='unique_supplier_code'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.usertype'),
        ),
        migrations.AddField(
            model_name='vaccinationrecord',
            name='batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stakeholder.chickbatch'),
        ),
        migrations.AddField(
            model_name='vaccinationrecord',
            name='vaccine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.vaccine'),
        ),
    ]
